{"version":3,"sources":["assets/images/dashboard/circle.svg","route/dashboard/dashboard.js","library/request.js","component/breadcrumb.js","library/helper.js"],"names":["module","exports","types","open","progress","done","rejected","useState","tickets","setTickets","statistics","setStatistics","loading","setLoading","token","useStorage","setting","useEffect","post","cache","then","res","success","temp","i","exactMath","round","sum","deposit","profit","referral","forDiv","title","icon","className","src","require","alt","t","toMoney","to","data","style","Math","map","ticket","key","id","status","axiosBase","setup","axios","baseURL","timeout","validateStatus","maxAge","get","path","opt","a","header","window","postMessage","notify","items","form","FormData","append","login","aria-label","aria-current","numEn","input","undefined","returnModel","symbolMap","toString","length","validateEmail","email","test","amount","replace","query","param","vars","location","search","substring","split","pair"],"mappings":"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","file":"static/js/22.40a6e500.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle.953c9ca0.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport Breadcrumb from \"component/breadcrumb\";\r\nimport { t } from \"locales\";\r\nimport { post } from \"library/request\";\r\nimport useStorage from \"reducer\";\r\nimport { toMoney } from \"library/helper\";\r\nimport exactMath from \"exact-math\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"component/spinner\";\r\n\r\nconst types = {\r\n  open: \"badge-gradient-success\",\r\n  progress: \"badge-gradient-warning\",\r\n  \"on-hold\": \"badge-gradient-info\",\r\n  done: \"badge-gradient-dark\",\r\n  rejected: \"badge-gradient-danger\",\r\n};\r\n\r\nexport default function () {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [statistics, setStatistics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const {\r\n    setting: { token },\r\n  } = useStorage();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    post(\"tickets\", { token }, { cache: true }).then((res) => {\r\n      if (res?.success) {\r\n        setTickets(res.success);\r\n      }\r\n    });\r\n    post(\"statistics\", { token }, { cache: true }).then((res) => {\r\n      setLoading(false);\r\n      if (res?.success) {\r\n        let temp = {};\r\n        for (let i in res.success) {\r\n          temp[i] = exactMath.round(res.success[i], 1);\r\n        }\r\n        setStatistics(temp);\r\n      }\r\n    });\r\n  }, []);\r\n  let sum = statistics?.deposit + statistics?.profit + statistics?.referral;\r\n  if (loading) return <Spinner forDiv />;\r\n  return (\r\n    <div>\r\n      <Breadcrumb title=\"dashboard\" icon=\"mdi-home\" />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 stretch-card grid-margin\">\r\n          <div className=\"card bg-gradient-primary card-img-holder text-white overflow-hidden\">\r\n            <div className=\"card-body\">\r\n              <img\r\n                src={require(\"assets/images/dashboard/circle.svg\")}\r\n                className=\"card-img-absolute\"\r\n                alt=\"circle\"\r\n              />\r\n              <h4 className=\"font-weight-normal mb-3\">\r\n                {t(\"totalInvest\")}{\" \"}\r\n                <i className=\"mdi  mdi-import mdi-24px float-left\"></i>\r\n              </h4>\r\n              <h2 className=\"mb-5\">$ {toMoney(statistics?.deposit)}</h2>\r\n              <Link to=\"/wallet\">\r\n                <h6 className=\"card-text text-black\">{t(\"incAmount\")}</h6>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4 stretch-card grid-margin\">\r\n          <div className=\"card  bg-gradient-success card-img-holder text-white  overflow-hidden\">\r\n            <div className=\"card-body\">\r\n              <img\r\n                src={require(\"assets/images/dashboard/circle.svg\")}\r\n                className=\"card-img-absolute\"\r\n                alt=\"circle\"\r\n              />\r\n              <h4 className=\"font-weight-normal mb-3\">\r\n                {t(\"totalProfit\")}{\" \"}\r\n                <i className=\"mdi mdi-diamond-outline mdi-24px float-left\"></i>\r\n              </h4>\r\n              <h2 className=\"mb-5\">$ {toMoney(statistics?.profit)}</h2>\r\n              <Link to=\"/plans\">\r\n                <h6 className=\"card-text text-black\">{t(\"startInvesting\")}</h6>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4 stretch-card grid-margin\">\r\n          <div className=\"card bg-gradient-danger card-img-holder text-white  overflow-hidden\">\r\n            <div className=\"card-body\">\r\n              <img\r\n                src={require(\"assets/images/dashboard/circle.svg\")}\r\n                className=\"card-img-absolute\"\r\n                alt=\"circle\"\r\n              />\r\n              <h4 className=\"font-weight-normal mb-3\">\r\n                {t(\"totalReferrals\")}{\" \"}\r\n                <i className=\"mdi mdi-reply mdi-24px float-left\"></i>\r\n              </h4>\r\n              <h2 className=\"mb-5\">$ {toMoney(statistics?.referral)}</h2>\r\n              <Link to=\"/referral\">\r\n                <h6 className=\"card-text text-black\">{t(\"inviteFirends\")}</h6>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{t(\"atGlance\")}</h4>\r\n              <div className=\"multi-graph mx-auto\">\r\n                <div\r\n                  className=\"graph\"\r\n                  data={t(\"totalInvest\")}\r\n                  style={{\r\n                    \"--percentage\": Math.round(\r\n                      (statistics?.deposit / sum) * 100\r\n                    ),\r\n                    \"--fill\": \"#b66dff\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"graph\"\r\n                  data={t(\"totalProfit\")}\r\n                  style={{\r\n                    \"--percentage\": Math.round(\r\n                      (statistics?.profit / sum) * 100\r\n                    ),\r\n                    \"--fill\": \"#00b050\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"graph\"\r\n                  data={t(\"totalReferrals\")}\r\n                  style={{\r\n                    \"--percentage\": Math.round(\r\n                      (statistics?.referral / sum) * 100\r\n                    ),\r\n                    \"--fill\": \"#fe7c96\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"rounded-legend legend-vertical legend-bottom-left pt-4 \">\r\n                <ul className=\"row \">\r\n                  <li className=\"col-4 text-center\">\r\n                    <span className=\"legend-dots bg-info\"></span>\r\n                    {t(\"invest\")}\r\n                  </li>\r\n                  <li className=\"col-4 text-center\">\r\n                    <span className=\"legend-dots bg-success\"></span>\r\n                    {t(\"profit\")}\r\n                  </li>\r\n                  <li className=\"col-4 text-center\">\r\n                    <span className=\"legend-dots bg-danger \"></span>\r\n                    {t(\"referrals\")}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{t(\"recentTicket\")}</h4>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th> {t(\"subject\")} </th>\r\n                      <th> {t(\"status\")} </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tickets?.map((ticket, i) => (\r\n                      <tr key={i}>\r\n                        <td>\r\n                          <Link to={\"ticket/view/\" + ticket.id}>\r\n                            {ticket.title}{\" \"}\r\n                          </Link>\r\n                        </td>\r\n                        <td>\r\n                          <Link to={\"ticket/view/\" + ticket.id}>\r\n                            <label className={\"badge \" + types[ticket.status]}>\r\n                              {t(ticket.status)}\r\n                            </label>\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { setup } from \"axios-cache-adapter\";\r\n// export const baseUrl = \"http://localhost:8000/api/\";\r\nexport const baseUrl = \"https://stronghold.live/api/\";\r\nconst axiosBase = setup({\r\n  axios,\r\n  baseURL: baseUrl,\r\n  timeout: 5000,\r\n  validateStatus: function () {\r\n    return true;\r\n  },\r\n  cache: {\r\n    maxAge: 1000,\r\n  },\r\n});\r\n\r\nexport const get = async (path, opt) => {\r\n  let header = {};\r\n  try {\r\n    if (opt?.cache) {\r\n      header.cache = {\r\n        maxAge: 10 * 60 * 1000,\r\n      };\r\n    }\r\n    const res = await axiosBase.get(path, header);\r\n    const { data } = await res;\r\n    return data;\r\n  } catch (error) {\r\n    window.postMessage({ notify: [\"error\", \"try-later\"] }, \"*\");\r\n    return await 0;\r\n  }\r\n};\r\n\r\nexport const post = async (path, items, opt) => {\r\n  let header = {};\r\n  try {\r\n    if (opt?.cache) {\r\n      header.cache = {\r\n        maxAge: 10 * 60 * 1000,\r\n      };\r\n    }\r\n    let form = new FormData();\r\n    for (let key in items) {\r\n      form.append(key, items[key]);\r\n    }\r\n    const res = axiosBase.post(path, form, header);\r\n    const { data } = await res;\r\n    if (data?.login) {\r\n      window.postMessage({ login: true }, \"*\");\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    window.postMessage({ notify: [\"error\", \"try-later\"] }, \"*\");\r\n    return await 0;\r\n  }\r\n};\r\n\r\nexport default { get, post };\r\n","import React from \"react\";\r\nimport { t } from \"locales\";\r\nexport default function ({ title, icon }) {\r\n  return (\r\n    <div className=\"page-header\">\r\n      <h3 className=\"page-title\">\r\n        <span className=\"page-title-icon bg-gradient-primary text-black mr-2\">\r\n          <i className={\"mdi \" + icon}></i>\r\n        </span>{\" \"}\r\n        {t(title)}{\" \"}\r\n      </h3>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ul className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            <span></span>{\" \"}\r\n            <i className=\"mdi mdi-alert-circle-outline icon-sm text-primary align-middle\"></i>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export function numEn(input) {\r\n  if (input == undefined) return;\r\n  var returnModel = \"\",\r\n    symbolMap = {\r\n      \"۱\": \"1\",\r\n      \"۲\": \"2\",\r\n      \"۳\": \"3\",\r\n      \"۴\": \"4\",\r\n      \"۵\": \"5\",\r\n      \"۶\": \"6\",\r\n      \"۷\": \"7\",\r\n      \"۸\": \"8\",\r\n      \"۹\": \"9\",\r\n      \"۰\": \"0\",\r\n    };\r\n  input = input.toString();\r\n  for (var i = 0; i < input.length; i++)\r\n    if (symbolMap[input[i]]) returnModel += symbolMap[input[i]];\r\n    else returnModel += input[i];\r\n  return returnModel;\r\n}\r\nexport const validateEmail = (email) => {\r\n  var re = /\\S+@\\S+\\.\\S+/;\r\n  return re.test(email);\r\n};\r\nexport const isArray = function (a) {\r\n  return Array.isArray(a);\r\n};\r\n\r\nexport const isObject = function (o) {\r\n  return o === Object(o) && !isArray(o) && typeof o !== \"function\";\r\n};\r\n\r\nexport function isIterable(variable) {\r\n  return isArray(variable) || isObject(variable);\r\n}\r\n\r\nexport function clone(arr) {\r\n  let newObj = arr instanceof Array ? [] : {};\r\n  for (let i in arr) {\r\n    if (i == \"clone\") continue;\r\n    if (arr[i] && typeof arr[i] == \"object\") {\r\n      newObj[i] = clone(arr[i]);\r\n    } else newObj[i] = arr[i];\r\n  }\r\n  return newObj;\r\n}\r\n\r\nexport function toMoney(amount) {\r\n  if (typeof amount == \"undefined\" || amount == \"null\") return \"\";\r\n  if (amount.length < 2) return amount + \"\";\r\n  return (\"\" + amount)\r\n    .replace(/,/g, \"\")\r\n    .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\r\n}\r\nexport function toggle(collection, item) {\r\n  let temp = clone(collection);\r\n  var idx = temp.indexOf(item);\r\n  if (idx !== -1) {\r\n    temp.splice(idx, 1);\r\n  } else {\r\n    temp.push(item);\r\n  }\r\n  return temp;\r\n}\r\n\r\nexport function num(txt) {\r\n  let ret = 0;\r\n  if (typeof txt == \"string\") ret = txt.replace(/[^\\d\\.]*/g, \"\");\r\n  else ret = txt;\r\n  return parseInt(ret);\r\n}\r\nexport function query(param) {\r\n  let xquery = window.location.search.substring(1);\r\n  let vars = xquery.split(\"&\");\r\n  for (let i = 0; i < vars.length; i++) {\r\n    let pair = vars[i].split(\"=\");\r\n    if (pair[0] == param) {\r\n      return pair[1];\r\n    }\r\n  }\r\n  return false;\r\n}\r\n"],"sourceRoot":""}