{"version":3,"sources":["locales/index.js","locales/fa.js","locales/en.js","reducer/context/index.js","reducer/persist/useReducerWithThunk.js","reducer/persist/usePersistedReducer.js","reducer/persist/createStorage.js","reducer/persist/index.js","reducer/actions/setting.js","reducer/actions/app.js","reducer/actions/session.js","reducer/index.js","component/spinner.js","assets/images/logo.png","assets/images/favicon.png","Routes.js","component/sidebar.js","component/navbar.js","component/footer.js","App.js","serviceWorker.js","index.js"],"names":["i18n","init","lng","resources","fa","translations","dashboard","wallet","transaction","plans","referrals","ticket","candle","profile","signUp","login","fullname","name","email","tell","password","oldPassword","newPassword","reNewPassword","language","tr","en","ar","referralCode","code","codeSendedToEmail","activate","reSend","activateNotSended","haveAccount","forgetPassword","dontHaveAccount","createAccount","wrongAccount","restEmailSend","recover","invest","totalInvest","profit","totalProfit","referral","totalReferrals","atGlance","subject","status","recentTicket","levelOne","balance","freezed","withdrawable","withdraw","deposit","deposited","address","amount","withdrawAndDeposit","withdrawRequest","haveProblem","addressCopid","depositInfo","withdrawSuccess","noBalanceDoDeposit","planType","planProfit","planInvest","planCancelable","yes","no","start","daily","weekly","monthly","semiAnnualy","Annualy","pickPlan","pickDesc","noData","referralDesc","yourReferral","yourRefers","referralHelp","refCode","refLink","userName","invested","joinDate","addTicket","open","done","progress","rejected","date","tikcktTitle","tikcktText","replay","submit","update","successTicket","userInformation","changePassword","passwordNotMatch","successPassword","successInfo","incAmount","startInvesting","inviteFirends","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","t","key","opt","createContext","usePersistedReducer","reducer","initialState","storage","useReducer","get","state","dispatch","useEffect","set","createStorage","provider","json","getItem","JSON","parse","value","setItem","stringify","createPersistedReducer","localStorage","token","lang","isLoged","action","sessionStorage","useStorage","useContext","storeContext","storeContextProvider","props","settingReducer","_setSetting","_setting","setting","setSetting","appReducer","_setApp","_app","app","setApp","sessionReducer","_setSession","_session","session","setSession","Provider","children","className","module","exports","Dashboard","lazy","Wallet","WalletMng","Plans","Plan","Referral","Candle","Profile","route","home","path","component","sign","AppRoutes","useHistory","location","useLocation","console","log","list","isRoute","find","e","item","pathname","fallback","map","i","exact","to","withRouter","useState","setState","onRouteChanged","body","document","querySelector","querySelectorAll","forEach","el","addEventListener","classList","contains","add","remove","Object","keys","obj","isPathActive","startsWith","id","href","onClick","evt","preventDefault","Navbar","src","require","alt","type","toggle","Dropdown","alignRight","Toggle","Trans","Menu","Item","Footer","window","event","data","scrollTo","fullPageLayoutRoutes","length","isFullPageLayout","navbarComponent","sidebarComponent","footerComponent","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c73de998.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\n// import LanguageDetector from 'i18next-browser-languagedetector';\r\nimport fa from \"./fa.js\";\r\nimport en from \"./en.js\";\r\n\r\ni18n\r\n  // .use(LanguageDetector)\r\n  .init({\r\n    lng: \"fa\", // 'en' | 'es'\r\n    resources: {\r\n      fa: {\r\n        translations: fa,\r\n      },\r\n      en: {\r\n        translations: en,\r\n      },\r\n    },\r\n    fallbackLng: \"fa\",\r\n    debug: false,\r\n\r\n    // have a common namespace used around the full app\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n\r\n    keySeparator: false, // we use content as keys\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react!!\r\n      formatSeparator: \",\",\r\n    },\r\n\r\n    react: {\r\n      wait: true,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\nexport const t = (key, opt) => i18n.t(key, opt);\r\n","export default {\r\n  dashboard: \"داشبرد\",\r\n  wallet: \"کیف پول\",\r\n  transaction: \"تراکنش ها\",\r\n  plans: \"پلن های سرمایه گذاری\",\r\n  referrals: \"دعوت از دوستان\",\r\n  ticket: \"تیکت ها\",\r\n  candle: \"نمودار قیمت ها\",\r\n  profile: \"پروفایل\",\r\n\r\n  signUp: \"ثبت نام\",\r\n  login: \"ورود\",\r\n  fullname: \"نام و نام خانوادگی\",\r\n  name: \"نام کاربری\",\r\n  email: \"ایمیل\",\r\n  tell: \"شماره تلفن\",\r\n  password: \"کلمه عبور\",\r\n  oldPassword: \"کلمه عبور فعلی\",\r\n  newPassword: \"کلمه عبور جدید\",\r\n  reNewPassword: \"تکرار کلمه عبور\",\r\n  language: \"زبان\",\r\n  fa: \"فارسی\",\r\n  tr: \"ترکی\",\r\n  en: \"انگلیسی\",\r\n  ar: \"عربی\",\r\n  referralCode: \"کد معرف\",\r\n  code: \"کد فعال سازی\",\r\n  codeSendedToEmail: \"کد فعال سازی برای شما ایمیل شد\",\r\n  activate: \" فعال سازی\",\r\n  reSend: \"ارسال مجدد\",\r\n  activateNotSended: \"کد فعال سازی ارسال نشده ؟\",\r\n  haveAccount: \"قبلا ثبت نام کرده اید؟\",\r\n  \"validation.empty\": \" این فیلد را پر کنید\",\r\n  \"validation.required\": \"خالی هست\",\r\n  \"validation.min\": \"مقدار این فیلد کمتر از حد مجاز است\",\r\n  \"validation.email\": \"ایمیل به درستی وارد نشده است\",\r\n  \"validation.code\": \"کد فعال سازی به درستی وارد نشده است\",\r\n  \"validation.exist\": \"وارد شده تکراری است\",\r\n  \"validation.invalid\": \"وارد شده نا معتبر است\",\r\n  \"validation.moreBalance\": \"وارد شده بیشتر از موجودی شما است\",\r\n  \"to-many-try\": \"لطفا بعدا تلاش کنید !\",\r\n  \"code-is-used\": \"این کد قبلا استفاده شده است\",\r\n  \"invalid-code\": \"کد وارد شده اشتباه است\",\r\n  \"wrong-user-pass\": \"نام کاربری یا کلمه عبور اشتباه است\",\r\n  \"no-wallet-found\": \"کیف پول یافت نشد\",\r\n  forgetPassword: \"رمز عبور را فراموش کردم !\",\r\n  dontHaveAccount: \"حساب کاربری ندارید‌؟\",\r\n  createAccount: \"ایجاد کنید\",\r\n  wrongAccount: \"ایمیل وارد شده اشتباه است\",\r\n  restEmailSend: \"پسورد جدید برای شما ایمیل شد\",\r\n  recover: \"بازیابی\",\r\n\r\n  invest: \"سپرده \",\r\n  totalInvest: \"مبلغ سپرده سرمایه گذاری\",\r\n  profit: \"سود سپرده\",\r\n  totalProfit: \"مبلغ سود سپرده\",\r\n  referral: \"دعوت شده ها\",\r\n  totalReferrals: \"سود دعوت شده ها\",\r\n  atGlance: \"در یک نگاه\",\r\n  subject: \"موضوع\",\r\n  status: \"وضعیت\",\r\n  recentTicket: \"آخرین تیکت ها\",\r\n\r\n  levelOne: \"سطح یک\",\r\n  balance: \"موجودی\",\r\n  freezed: \"سپرده\",\r\n  withdrawable: \"قابل برداشت\",\r\n  withdraw: \"برداشت\",\r\n  deposit: \"واریز\",\r\n  deposited: \"واریزی\",\r\n  address: \"آدرس ولت مقصد\",\r\n  amount: \"مقدار\",\r\n  withdrawAndDeposit: \"برداشت / واریز\",\r\n  withdrawRequest: \"درخواست برداشت\",\r\n  haveProblem: \"لطفا بعدا تلاش کنید !\",\r\n  addressCopid: \"آدرس کپی شد\",\r\n  depositInfo:\r\n    \"این ادرس مخصوص کیف پول شما است و بعد از انتقال حساب شما شارژ خواهد شد\",\r\n  withdrawSuccess: \"درخواست برداشت با موفقیت ثبت شد\",\r\n  noBalanceDoDeposit: \"موجودی شما کافی نیست . حساب خود را شارژ کنید\",\r\n\r\n  planType: \"نوع پلن\",\r\n  planProfit: \"سود بازگشتی\",\r\n  planInvest: \"حداقل سپرده\",\r\n  planCancelable: \"امکان انصراف\",\r\n  yes: \"بله\",\r\n  no: \"خیر\",\r\n  start: \"شروع\",\r\n  daily: \"روزانه\",\r\n  weekly: \"هفتگی\",\r\n  monthly: \"ماهانه\",\r\n  semiAnnualy: \"شش ماهه\",\r\n  Annualy: \"سالیانه\",\r\n  pickPlan: \"یکی از پلن های زیر را انتخاب کنید\",\r\n  pickDesc:\r\n    \"پلن مناسب و مد نظرتون را انتخاب کنید ، توجه داشته باشید که در هر شرایطی شما می توانید پلن انتخاب شده لغو کنید ، در صورتی که پلن انتخابی امکان لغو داشته باشد ، سپرده با سودش برای شما برگشت داده می شود ، در غیر این صورت فقط سپرده برگشته داده می شود\",\r\n  noData: \"اطلاعاتی یافت نشد !\",\r\n\r\n  referralDesc:\r\n    \"با دعوت از دوستان ،۲٪ سود سپرده گذاری دوستانتان به شما تعلق می گیرد\",\r\n  yourReferral: \"لینک دعوت از دوستان برای شما\",\r\n  yourRefers: \"دعوت شده ها توسط شما\",\r\n  referralHelp: \"با اشتراک گذاری لینک زیر  ، در سود دوستانتان سهیم شوید\",\r\n  refCode: \"کد معرف شما\",\r\n  refLink: \"لینک معرف شما\",\r\n  userName: \"نام کاربر\",\r\n  invested: \"سپرده گذاری کرده\",\r\n  joinDate: \"تاریخ عضویت\",\r\n\r\n  addTicket: \"افزودن تیکت\",\r\n  open: \"باز\",\r\n  done: \"بسته شده\",\r\n  \"on-hold\": \"در انتظار\",\r\n  progress: \" در جریان\",\r\n  rejected: \"رد شده\",\r\n  date: \"تاریخ\",\r\n  tikcktTitle: \"عنوان تیکت\",\r\n  tikcktText: \"توضیحات\",\r\n  replay: \"پاسخ\",\r\n  submit: \"ارسال\",\r\n  update: \"ثبت تغیرات\",\r\n  successTicket: \"تیکت با موقیت ارسال شد\",\r\n  userInformation: \"اطلاعات کاربر\",\r\n  changePassword: \"تغییر کلمه عبور\",\r\n  passwordNotMatch: \"کلمه عبور با تکرار کلمه عبور مطابقت ندارد\",\r\n  successPassword: \"کلمه عبور با موفقیت به روز رسانی شد\",\r\n  successInfo: \"اطلاعات با موفقیت به روز رسانی شد\",\r\n  incAmount: \"افزایش موجودی\",\r\n  startInvesting: \"سپرده گذاری\",\r\n  inviteFirends: \"دعوت از دوستان\",\r\n};\r\n","export default {\r\n  dashboard: \"Dashboard\",\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport default createContext();\r\n","import { useReducer, useMemo, useEffect } from \"react\";\r\n\r\nlet stores = {};\r\nlet subscribers = {};\r\nlet counter = 0;\r\n\r\nconst REDUX_DEVTOOL_SET_STATE = \"REDUX_DEVTOOL_SET_STATE\";\r\n\r\nconst withDevTools = name => {\r\n    return (\r\n        name &&\r\n        process.env.NODE_ENV === \"development\" &&\r\n        typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n    );\r\n};\r\n\r\nconst devToolReducer = reducer => (state, action) => {\r\n    if (action.type === REDUX_DEVTOOL_SET_STATE) {\r\n        return action.state;\r\n    } else {\r\n        return reducer(state, action);\r\n    }\r\n};\r\n\r\nfunction useReducerWithThunk(reducer, initialState, name) {\r\n    let memoizedReducer = reducer;\r\n    let shouldConfigDevTools = withDevTools(name);\r\n\r\n    // Memoizing to prevent recreation of devtoolReducer on each render.\r\n\r\n    memoizedReducer = useMemo(() => devToolReducer(reducer), [reducer]);\r\n\r\n\r\n    const [state, dispatch] = useReducer(memoizedReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        if (shouldConfigDevTools) {\r\n            memoizedReducer.prototype.name = getReducerName(name);\r\n\r\n            if (stores[memoizedReducer.prototype.name]) {\r\n                throw new Error(\"More than one useReducerWithThunk have same name\");\r\n            }\r\n\r\n            stores[\r\n                memoizedReducer.prototype.name\r\n            ] = window.__REDUX_DEVTOOLS_EXTENSION__(reducer, initialState, {\r\n                name: memoizedReducer.prototype.name\r\n            });\r\n\r\n            subscribers[memoizedReducer.prototype.name] = stores[\r\n                memoizedReducer.prototype.name\r\n            ].subscribe(() => {\r\n                dispatch({\r\n                    type: REDUX_DEVTOOL_SET_STATE,\r\n                    state: stores[memoizedReducer.prototype.name].getState()\r\n                });\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (shouldConfigDevTools) {\r\n                subscribers[memoizedReducer.prototype.name]();\r\n                subscribers[memoizedReducer.prototype.name] = undefined;\r\n                stores[memoizedReducer.prototype.name] = undefined;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const customDispatch = action => {\r\n        if (typeof action === \"function\") {\r\n            return action(customDispatch);\r\n        } else {\r\n            if (shouldConfigDevTools && stores[memoizedReducer.prototype.name]) {\r\n                stores[memoizedReducer.prototype.name].dispatch(action);\r\n            } else {\r\n                dispatch(action);\r\n            }\r\n        }\r\n    };\r\n\r\n    return [state, customDispatch];\r\n}\r\n\r\nconst getReducerName = name => {\r\n    if (!name) {\r\n        const newName = document.title + \"_\" + counter;\r\n        counter++;\r\n        return newName;\r\n    }\r\n    return name;\r\n};\r\nexport default useReducerWithThunk;","import React, { useEffect, useState, useReducer } from 'react';\r\nimport useReducerWithThunk from './useReducerWithThunk';\r\n\r\nconst usePersistedReducer = (reducer, initialState, init, key, storage) => {\r\n  // const [state, dispatch] = useReducerWithThunk(reducer, storage.get(key, initialState), key);\r\n  const [state, dispatch] = useReducer(reducer, storage.get(key, initialState), init);\r\n  useEffect(() => {\r\n    storage.set(key, state);\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n};\r\nexport default usePersistedReducer;\r\n","const createStorage = (provider) => ({\r\n  get(key, initialState) {\r\n    const json = provider.getItem(key);\r\n    const ret = (json === null || json == 'undefined')\r\n      ? typeof initialState === 'function'\r\n        ? initialState()\r\n        : initialState\r\n      : JSON.parse(json);\r\n    return ret;\r\n  },\r\n  set(key, value) {\r\n    provider.setItem(key, JSON.stringify(value));\r\n  },\r\n});\r\n\r\nexport default createStorage;\r\n","import { useReducer } from 'react';\r\n\r\nimport usePersistedReducer from './usePersistedReducer';\r\nimport createStorage from './createStorage';\r\n\r\nconst createPersistedReducer = (key, provider) => {\r\n  if (provider) {\r\n    const storage = createStorage(provider);\r\n    return (reducer, initialState, init) =>\r\n      usePersistedReducer(reducer, initialState, init, key, storage);\r\n  }\r\n  return useReducer;\r\n};\r\n\r\nexport default createPersistedReducer;\r\n","import createPersistedReducer from \"../persist\";\r\n\r\nexport default createPersistedReducer(\"setting\", localStorage);\r\nexport const initialState = {\r\n  token: \"\",\r\n  name: \"\",\r\n  lang: \"fa\",\r\n  isLoged: false,\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  if (action == null) {\r\n    return { ...initialState };\r\n  } else if (\"login\" in action) {\r\n    return { ...state, ...action.login, isLoged: true };\r\n  } else {\r\n    return { ...state, ...action };\r\n  }\r\n}\r\n","import createPersistedReducer from \"../persist\";\r\n\r\nexport default createPersistedReducer(\"app\");\r\n\r\nexport const initialState = {};\r\nexport function reducer(state, action) {\r\n  if (action == null) {\r\n    return { ...initialState };\r\n  } else {\r\n    return { ...state, ...action };\r\n  }\r\n}\r\n","import createPersistedReducer from \"../persist\";\r\n\r\nexport default createPersistedReducer(\"session\", sessionStorage);\r\n\r\nexport const initialState = {};\r\n\r\nexport function reducer(state, action) {\r\n  if (action == null) {\r\n    return { ...initialState };\r\n  } else {\r\n    return { ...state, ...action };\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport storeContext from \"reducer/context\";\r\n\r\nimport settingReducer, {\r\n  reducer as _setSetting,\r\n  initialState as _setting,\r\n} from \"reducer/actions/setting\";\r\nimport appReducer, {\r\n  reducer as _setApp,\r\n  initialState as _app,\r\n} from \"reducer/actions/app\";\r\nimport sessionReducer, {\r\n  reducer as _setSession,\r\n  initialState as _session,\r\n} from \"reducer/actions/session\";\r\n\r\nexport default function useStorage() {\r\n  return useContext(storeContext);\r\n}\r\nexport const storeContextProvider = (props) => {\r\n  const [setting, setSetting] = settingReducer(_setSetting, _setting);\r\n  const [app, setApp] = appReducer(_setApp, _app);\r\n  const [session, setSession] = sessionReducer(_setSession, _session);\r\n\r\n  return (\r\n    <storeContext.Provider\r\n      value={{\r\n        setting,\r\n        setSetting,\r\n        app,\r\n        setApp,\r\n        session,\r\n        setSession,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </storeContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\"spinner-wrapper \" + (\"forDiv\" in props ? \"for-div\" : \"\")}\r\n      >\r\n        <div className=\"donut\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.b796497b.png\";","module.exports = __webpack_public_path__ + \"static/media/favicon.17fe1e57.png\";","import React, { Suspense, lazy } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport useStorage from \"reducer\";\r\nimport Spinner from \"component/spinner\";\r\n\r\nconst Dashboard = lazy(() => import(\"route/dashboard/dashboard\"));\r\nconst Wallet = lazy(() => import(\"route/wallet/wallet\"));\r\nconst WalletMng = lazy(() => import(\"route/wallet/manage\"));\r\nconst Plans = lazy(() => import(\"route/plans/plans\"));\r\nconst Plan = lazy(() => import(\"route/plans/plan\"));\r\nconst Referral = lazy(() => import(\"route/referral/referral\"));\r\nconst Candle = lazy(() => import(\"route/candle/candle\"));\r\nconst Profile = lazy(() => import(\"route/profile/profile\"));\r\nconst Ticket = lazy(() => import(\"route/ticket/ticket\"));\r\nconst NewTicket = lazy(() => import(\"route/ticket/newTicket\"));\r\nconst ViewTicket = lazy(() => import(\"route/ticket/viewTicket\"));\r\nconst Register = lazy(() => import(\"route/sign/register\"));\r\nconst Activate = lazy(() => import(\"route/sign/activate\"));\r\nconst Login = lazy(() => import(\"route/sign/login\"));\r\nconst Forget = lazy(() => import(\"route/sign/forget\"));\r\n\r\nconst route = {\r\n  home: [\r\n    { path: \"/dashboard\", component: Dashboard },\r\n    { path: \"/wallet\", component: Wallet },\r\n    { path: \"/wallet/:coin\", component: WalletMng },\r\n    { path: \"/plans\", component: Plans },\r\n    { path: \"/plans/:coin/:plan\", component: Plan },\r\n    { path: \"/referral\", component: Referral },\r\n    { path: \"/candle\", component: Candle },\r\n    { path: \"/ticket\", component: Ticket },\r\n    { path: \"/profile\", component: Profile },\r\n    { path: \"/ticket/new\", component: NewTicket },\r\n    { path: \"/ticket/view/:id\", component: ViewTicket },\r\n  ],\r\n  sign: [\r\n    { path: \"/register\", component: Register },\r\n    { path: \"/activate\", component: Activate },\r\n    { path: \"/login\", component: Login },\r\n    { path: \"/forget\", component: Forget },\r\n  ],\r\n};\r\nconst AppRoutes = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const {\r\n    setting: { isLoged },\r\n  } = useStorage();\r\n  console.log(isLoged);\r\n  const list = route[isLoged ? \"home\" : \"sign\"];\r\n  const isRoute = list.find((e) => e.item == location.pathname);\r\n\r\n  return (\r\n    <Suspense fallback={<Spinner />}>\r\n      <Switch>\r\n        {list.map((route, i) => (\r\n          <Route key={i} exact path={route.path} component={route.component} />\r\n        ))}\r\n        {!isRoute && <Redirect to={isLoged ? \"/dashboard\" : \"/login\"} />}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, useLocation, Link } from \"react-router-dom\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { t } from \"locales\";\r\nimport useStorage from \"reducer\";\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    setting: { name },\r\n  } = useStorage();\r\n  const [state, setState] = useState({});\r\n  const location = useLocation();\r\n\r\n  const toggleMenuState = (menuState) => {\r\n    if (state[menuState]) {\r\n      setState({ [menuState]: false });\r\n    } else if (Object.keys(state).length === 0) {\r\n      setState({ [menuState]: true });\r\n    } else {\r\n      Object.keys(state).forEach((i) => {\r\n        setState({ [i]: false });\r\n      });\r\n      setState({ [menuState]: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onRouteChanged();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\r\n      el.addEventListener(\"mouseover\", function () {\r\n        if (body.classList.contains(\"sidebar-icon-only\")) {\r\n          el.classList.add(\"hover-open\");\r\n        }\r\n      });\r\n      el.addEventListener(\"mouseout\", function () {\r\n        if (body.classList.contains(\"sidebar-icon-only\")) {\r\n          el.classList.remove(\"hover-open\");\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const onRouteChanged = () => {\r\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\r\n    Object.keys(state).forEach((i) => {\r\n      setState({ [i]: false });\r\n    });\r\n\r\n    const dropdownPaths = [{ path: \"/apps\", state: \"appsMenuOpen\" }];\r\n\r\n    dropdownPaths.forEach((obj) => {\r\n      if (isPathActive(obj.path)) {\r\n        setState({ [obj.state]: true });\r\n      }\r\n    });\r\n  };\r\n  const isPathActive = (path) => {\r\n    return location.pathname.startsWith(path);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n      <ul className=\"nav\">\r\n        <li className=\"nav-item nav-profile\">\r\n          <a\r\n            href=\"!#\"\r\n            className=\"nav-link\"\r\n            onClick={(evt) => evt.preventDefault()}\r\n          >\r\n            <div className=\"nav-profile-image\">\r\n              <i className=\" mdi mdi-account-circle user-avatar\"></i>\r\n              <span className=\"login-status online\"></span>{\" \"}\r\n              {/* change to offline or busy as needed */}\r\n            </div>\r\n            <div className=\"nav-profile-text\">\r\n              <span className=\"font-weight-bold mb-2\">{name}</span>\r\n              <span className=\"text-secondary text-small\">{t(\"levelOne\")}</span>\r\n            </div>\r\n            <i className=\"mdi mdi-bookmark-check text-success nav-profile-badge\"></i>\r\n          </a>\r\n        </li>\r\n        <li\r\n          className={\r\n            isPathActive(\"/dashboard\") ? \"nav-item active\" : \"nav-item\"\r\n          }\r\n        >\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            <span className=\"menu-title\">{t(\"dashboard\")}</span>\r\n            <i className=\"mdi mdi-home-outline menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        <li\r\n          className={isPathActive(\"/wallet\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/wallet\">\r\n            <span className=\"menu-title\">{t(\"wallet\")}</span>\r\n            <i className=\"mdi mdi mdi-wallet menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        {/* <li\r\n          className={isPathActive(\"/withdraw\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/withdraw\">\r\n            <span className=\"menu-title\">{t(\"withdraw\")}</span>\r\n            <i className=\"mdi mdi-export menu-icon\"></i>\r\n          </Link>\r\n        </li> */}\r\n        <li className={isPathActive(\"/plans\") ? \"nav-item active\" : \"nav-item\"}>\r\n          <Link className=\"nav-link\" to=\"/plans\">\r\n            <span className=\"menu-title\">{t(\"plans\")}</span>\r\n            <i className=\"mdi mdi mdi-calculator menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        <li\r\n          className={isPathActive(\"/referral\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/referral\">\r\n            <span className=\"menu-title\">{t(\"referral\")}</span>\r\n            <i className=\"mdi mdi-reply menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        <li\r\n          className={isPathActive(\"/ticket\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/ticket\">\r\n            <span className=\"menu-title\">{t(\"ticket\")}</span>\r\n            <i className=\"mdi mdi-message-text menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        <li\r\n          className={isPathActive(\"/candle\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/candle\">\r\n            <span className=\"menu-title\">{t(\"candle\")}</span>\r\n            <i className=\"mdi mdi-chart-line menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n        <li\r\n          className={isPathActive(\"/profile\") ? \"nav-item active\" : \"nav-item\"}\r\n        >\r\n          <Link className=\"nav-link\" to=\"/profile\">\r\n            <span className=\"menu-title\">{t(\"profile\")}</span>\r\n            <i className=\"mdi mdi-account menu-icon\"></i>\r\n          </Link>\r\n        </li>\r\n\r\n        {/* <li\r\n            className={\r\n              isPathActive(\"/basic-ui\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.basicUiMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"basicUiMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Basic UI Elements</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.basicUiMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/basic-ui/buttons\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/basic-ui/buttons\"\r\n                  >\r\n                    <Trans>Buttons</Trans>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/basic-ui/dropdowns\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/basic-ui/dropdowns\"\r\n                  >\r\n                    <Trans>Dropdowns</Trans>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/basic-ui/typography\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/basic-ui/typography\"\r\n                  >\r\n                    <Trans>Typography</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/form-elements\")\r\n                ? \"nav-item active\"\r\n                : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.formElementsMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"formElementsMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Form Elements</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-format-list-bulleted menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.formElementsMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/form-elements/basic-elements\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/form-elements/basic-elements\"\r\n                  >\r\n                    <Trans>Basic Elements</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/tables\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.tablesMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"tablesMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Tables</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-table-large menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.tablesMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/tables/basic-table\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/tables/basic-table\"\r\n                  >\r\n                    <Trans>Basic Table</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/icons\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.iconsMenuOpen ? \"nav-link menu-expanded\" : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"iconsMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Icons</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-contacts menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.iconsMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/icons/mdi\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/icons/mdi\"\r\n                  >\r\n                    <Trans>Material</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/charts\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.chartsMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"chartsMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Charts</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-chart-bar menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.chartsMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/charts/chart-js\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/charts/chart-js\"\r\n                  >\r\n                    <Trans>Chart Js</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/user-pages\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.userPagesMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"userPagesMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>User Pages</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-lock menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.userPagesMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/user-pages/login-1\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/user-pages/login-1\"\r\n                  >\r\n                    <Trans>Login</Trans>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/user-pages/register-1\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/user-pages/register-1\"\r\n                  >\r\n                    <Trans>Register</Trans>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/user-pages/lockscreen\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/user-pages/lockscreen\"\r\n                  >\r\n                    <Trans>Lockscreen</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/error-pages\") ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.errorPagesMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"errorPagesMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Error Pages</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-security menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.errorPagesMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/error-pages/error-404\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/error-pages/error-404\"\r\n                  >\r\n                    404\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/error-pages/error-500\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/error-pages/error-500\"\r\n                  >\r\n                    500\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/general-pages\")\r\n                ? \"nav-item active\"\r\n                : \"nav-item\"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                state.generalPagesMenuOpen\r\n                  ? \"nav-link menu-expanded\"\r\n                  : \"nav-link\"\r\n              }\r\n              onClick={() => toggleMenuState(\"generalPagesMenuOpen\")}\r\n              data-toggle=\"collapse\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>General Pages</Trans>\r\n              </span>\r\n              <i className=\"menu-arrow\"></i>\r\n              <i className=\"mdi mdi-medical-bag menu-icon\"></i>\r\n            </div>\r\n            <Collapse in={state.generalPagesMenuOpen}>\r\n              <ul className=\"nav flex-column sub-menu\">\r\n                <li className=\"nav-item\">\r\n                  {\" \"}\r\n                  <Link\r\n                    className={\r\n                      isPathActive(\"/general-pages/blank-page\")\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                    to=\"/general-pages/blank-page\"\r\n                  >\r\n                    <Trans>Blank Page</Trans>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link\"\r\n              href=\"http://bootstrapdash.com/demo/purple-react-free/documentation/documentation.html\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <span className=\"menu-title\">\r\n                <Trans>Documentation</Trans>\r\n              </span>\r\n              <i className=\"mdi mdi-file-document-box menu-icon\"></i>\r\n            </a>\r\n          </li>\r\n         */}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { t } from \"locales\";\r\nimport useStorage from \"reducer\";\r\n\r\nconst Navbar = (props) => {\r\n  const {\r\n    setting: { name },\r\n    setSetting,\r\n  } = useStorage();\r\n  const [state, setState] = useState({});\r\n\r\n  const logOut = (e) => {\r\n    e.preventDefault();\r\n    setSetting(null);\r\n  };\r\n  const toggleOffcanvas = () => {\r\n    document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\r\n  };\r\n  const toggleRightSidebar = () => {\r\n    document.querySelector(\".right-sidebar\").classList.toggle(\"open\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n      <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n        <Link className=\"navbar-brand brand-logo\" to=\"/\">\r\n          <img src={require(\"assets/images/logo.png\")} alt=\"logo\" />\r\n        </Link>\r\n        <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\r\n          <img src={require(\"assets/images/favicon.png\")} alt=\"logo\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"navbar-menu-wrapper d-flex align-items-stretch\">\r\n        <button\r\n          className=\"navbar-toggler navbar-toggler align-self-center\"\r\n          type=\"button\"\r\n          onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\r\n        >\r\n          <span className=\"mdi mdi-menu\"></span>\r\n        </button>\r\n        <ul className=\"navbar-nav navbar-nav-right\">\r\n          <li className=\"nav-item nav-profile d-none\">\r\n            <Dropdown alignRight>\r\n              <Dropdown.Toggle className=\"nav-link\">\r\n                <div className=\"nav-profile-img\">\r\n                  {/* <img\r\n                    src={require(\"assets/images/faces/face1.jpg\")}\r\n                    alt=\"user\"\r\n                  /> */}\r\n                  <span className=\"availability-status online\"></span>\r\n                </div>\r\n                <div className=\"nav-profile-text\">\r\n                  <p className=\"mb-1 text-black\">\r\n                    <Trans>David Greymaax</Trans>\r\n                  </p>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"navbar-dropdown\">\r\n                <Dropdown.Item\r\n                  href=\"!#\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <i className=\"mdi mdi-cached mr-2 text-success\"></i>\r\n                  <Trans>Activity Log</Trans>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  href=\"!#\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <i className=\"mdi mdi-logout mr-2 text-primary\"></i>\r\n                  <Trans>Signout</Trans>\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Dropdown alignRight>\r\n              <Dropdown.Toggle className=\"nav-link count-indicator\">\r\n                <i className=\"mdi mdi-email-outline\"></i>\r\n                <span className=\"count-symbol bg-warning\"></span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu className=\"preview-list navbar-dropdown\">\r\n                <h6 className=\"p-3 mb-0\">\r\n                  <Trans>Messages</Trans>\r\n                </h6>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    {/* <img\r\n                      src={require(\"assets/images/faces/face4.jpg\")}\r\n                      alt=\"user\"\r\n                      className=\"profile-pic\"\r\n                    /> */}\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">\r\n                      <Trans>Mark send you a message</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray mb-0\">\r\n                      1 <Trans>Minutes ago</Trans>\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    {/* <img\r\n                      src={require(\"assets/images/faces/face2.jpg\")}\r\n                      alt=\"user\"\r\n                      className=\"profile-pic\"\r\n                    /> */}\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">\r\n                      <Trans>Cregh send you a message</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray mb-0\">\r\n                      15 <Trans>Minutes ago</Trans>\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    {/* <img\r\n                      src={require(\"assets/images/faces/face3.jpg\")}\r\n                      alt=\"user\"\r\n                      className=\"profile-pic\"\r\n                    /> */}\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject ellipsis mb-1 font-weight-normal\">\r\n                      <Trans>Profile picture updated</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray mb-0\">\r\n                      18 <Trans>Minutes ago</Trans>\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <h6 className=\"p-3 mb-0 text-center cursor-pointer\">\r\n                  4 <Trans>new messages</Trans>\r\n                </h6>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Dropdown alignRight>\r\n              <Dropdown.Toggle className=\"nav-link count-indicator\">\r\n                <i className=\"mdi mdi-bell-outline\"></i>\r\n                <span className=\"count-symbol bg-danger\"></span>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown-menu navbar-dropdown preview-list\">\r\n                <h6 className=\"p-3 mb-0\">\r\n                  <Trans>Notifications</Trans>\r\n                </h6>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    <div className=\"preview-icon bg-success\">\r\n                      <i className=\"mdi mdi-calendar\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject font-weight-normal mb-1\">\r\n                      <Trans>Event today</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray ellipsis mb-0\">\r\n                      <Trans>\r\n                        Just a reminder that you have an event today\r\n                      </Trans>\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    <div className=\"preview-icon bg-warning\">\r\n                      <i className=\"mdi mdi-settings\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject font-weight-normal mb-1\">\r\n                      <Trans>Settings</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray ellipsis mb-0\">\r\n                      <Trans>Update dashboard</Trans>\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <Dropdown.Item\r\n                  className=\"dropdown-item preview-item\"\r\n                  onClick={(evt) => evt.preventDefault()}\r\n                >\r\n                  <div className=\"preview-thumbnail\">\r\n                    <div className=\"preview-icon bg-info\">\r\n                      <i className=\"mdi mdi-link-variant\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"preview-item-content d-flex align-items-start flex-column justify-content-center\">\r\n                    <h6 className=\"preview-subject font-weight-normal mb-1\">\r\n                      <Trans>Launch Admin</Trans>\r\n                    </h6>\r\n                    <p className=\"text-gray ellipsis mb-0\">\r\n                      <Trans>New admin wow</Trans>!\r\n                    </p>\r\n                  </div>\r\n                </Dropdown.Item>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <h6 className=\"p-3 mb-0 text-center cursor-pointer\">\r\n                  <Trans>See all notifications</Trans>\r\n                </h6>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </li>\r\n          <li className=\"nav-item nav-logout\">\r\n            <a className=\"nav-link\" href=\"#\" onClick={logOut}>\r\n              <i className=\"mdi mdi-power\"></i>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item nav-settings d-none\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"nav-link border-0\"\r\n              onClick={toggleRightSidebar}\r\n            >\r\n              <i className=\"mdi mdi-format-line-spacing\"></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\r\n          type=\"button\"\r\n          onClick={toggleOffcanvas}\r\n        >\r\n          <span className=\"mdi mdi-menu\"></span>\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return null;\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"d-sm-flex justify-content-center justify-content-sm-between py-2\">\r\n        <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\"></span>\r\n        <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\"></span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, useLocation } from \"react-router-dom\";\r\nimport \"assets/styles/app.scss\";\r\nimport AppRoutes from \"Routes\";\r\nimport Sidebar from \"component/sidebar\";\r\nimport Navbar from \"component/navbar\";\r\n// import SettingsPanel from \"app/shared/SettingsPanel\";\r\nimport Footer from \"component/footer\";\r\nimport useStorage from \"reducer\";\r\n\r\nconst App = (props) => {\r\n  const { setSetting } = useStorage();\r\n  const [state, setState] = useState({});\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    body.classList.add(\"rtl\");\r\n    // body.classList.remove(\"rtl\");\r\n    // i18n.changeLanguage(\"en\");\r\n    window.addEventListener(\"message\", (event) => {\r\n      if (event?.data?.login) {\r\n        setSetting(null);\r\n      }\r\n    });\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  useEffect(() => {\r\n    const body = document.querySelector(\"body\");\r\n    const fullPageLayoutRoutes = [\r\n      \"/login\",\r\n      \"/activate\",\r\n      \"/register\",\r\n      \"/forget\",\r\n      \"/error-404\",\r\n      \"/error-500\",\r\n    ];\r\n    for (let i = 0; i < fullPageLayoutRoutes.length; i++) {\r\n      if (location.pathname === fullPageLayoutRoutes[i]) {\r\n        setState({\r\n          isFullPageLayout: true,\r\n        });\r\n        document\r\n          .querySelector(\".page-body-wrapper\")\r\n          .classList.add(\"full-page-wrapper\");\r\n        break;\r\n      } else {\r\n        setState({\r\n          isFullPageLayout: false,\r\n        });\r\n        document\r\n          .querySelector(\".page-body-wrapper\")\r\n          .classList.remove(\"full-page-wrapper\");\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  let navbarComponent = !state.isFullPageLayout ? <Navbar /> : \"\";\r\n  let sidebarComponent = !state.isFullPageLayout ? <Sidebar /> : \"\";\r\n  // let SettingsPanelComponent = !state.isFullPageLayout ? <SettingsPanel /> : \"\";\r\n  let footerComponent = !state.isFullPageLayout ? <Footer /> : \"\";\r\n  return (\r\n    <div className=\"container-scroller\">\r\n      {navbarComponent}\r\n      <div className=\"container-fluid page-body-wrapper\">\r\n        {sidebarComponent}\r\n        <div className=\"main-panel\">\r\n          <div className=\"content-wrapper\">\r\n            <AppRoutes />\r\n            {/* {SettingsPanelComponent} */}\r\n          </div>\r\n          {footerComponent}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { storeContextProvider as StoreContextProvider } from \"reducer\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/\">\r\n    <StoreContextProvider>\r\n      <App />\r\n    </StoreContextProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}